var PORT = 17481;
var HOST = '192.168.1.200';
var dgram = require('dgram');
var client = dgram.createSocket('udp4');
exports.client = client;
var firebase = require('./firebase');

client.on('message', (msg, rinfo) => {
	if (msg.toString().indexOf('INFO:Session timeout:INFO') !== -1) {
		console.log('time-out detected');
		login();
	} 	
});

var send = function(messageString) {
    var message = new Buffer(messageString);
    client.send(message, 0, message.length, PORT, HOST, function (err, bytes) {
		if (err) throw err;
		console.log('Domintell command sent: ' + messageString);
	});
}

var login = function () {
    send('LOGOUT');
}
login();

exports.appinfo = function () {
    send('APPINFO');
}

exports.lights = function (id) {
    send('BIR  ' + id);
}

exports.dim = function (id, perc) {
    send('DIM  ' + id+'%D'+perc);
}


exports.screens = function (id) {
    send('TRV  ' + id);
}


exports.ping = function (id) {
    send('PING');
}

client.on('message', (msg, rinfo) => {
    
    if (msg.toString().indexOf('BIR')==0) {
        toParse =  msg.toString();
        id = toParse.substr(5,4);
        
        status = toParse.substr(10,2);
        bitString = (parseInt("0x0"+status)>>>0).toString(2);
        while (bitString.length !=8){
            bitString = '0'+bitString;
        }
        for (i = 1;i <=8; i++){
console.log(id+'-'+i+' '+bitString+ ' ' +(8-i)+' '+bitString.charAt(8-i))
firebase.record_event(id+'-'+i, bitString.charAt(8-i));
        }
        
        console.log('from domintell: '+msg.toString()+ ' #'+id+'#'+status);
    }
	//firebase.dom_event(msg);
});